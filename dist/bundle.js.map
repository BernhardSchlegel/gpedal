{"version":3,"sources":["webpack:///webpack/bootstrap d84c2518110c66252a22","webpack:///./src/lib/utils.js","webpack:///./src/gmapPromises.js","webpack:///./src/index.js","webpack:///./src/ui.js","webpack:///./src/GPedalDisplay.js","webpack:///./src/lib/air_density.js","webpack:///./src/lib/power_v_speed.js","webpack:///./node_modules/mustache/mustache.js","webpack:///./src/Route.js","webpack:///./src/lib/smoothKernel.js","webpack:///./node_modules/blueimp-md5/js/md5.js","webpack:///./src/Meter.js","webpack:///./node_modules/url-search-params/build/url-search-params.node.js","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":"YACA,cAMA,IACA,iBAGA,mBACA,CACA,IACA,KAIA,2CAGA,aAGA,OACA,OAIA,IAzBA,eA4BA,MAGA,uBACA,GACA,kCACA,CACA,gBACA,cAGA,OAGA,iBACA,YACA,qBAA2B,UAA0B,UACrD,YAAiC,CAAe,QAChD,EAEA,aADA,QAIA,mBAAsD,wCAA+D,SAGrH,MAGA,8CC5DA,WACA,yBACA,sBAEA,WACA,iCACA,UACA,0BACA,YACA,OACA,iBACA,YACA,MACA,iBACA,QACA,QAEA,WACA,+BACA,IACA,aACA,uBACA,kCAEA,wBACA,gBAEA,OAEA,qBACA,kCACA,oBACA,QAEA,WACA,uBACA,SAEA,gBACA,oBAEA,gBACA,qBAEA,gBACA,uBAEA,gBACA,8BAEA,yDACA,qCChDA,WACA,iCACA,YAA2C,yBAC3C,CACA,SAEA,UAEA,UACA,EACA,IAdA,IAgBA,aACA,iCACA,eACA,CACA,WAEA,iBACA,iCACA,GAEA,UAEA,UACA,EACA,QAEA,WACA,iCACA,kCACA,gCACA,GAEA,UAEA,UACA,EACA,IA1CA,sBACA,mCACA,oICFmB,GAEnB,iDACA,QACA,MAAC,qCCGD,UACA,sBACA,sBACA,yCACA,aACA,QAGA,4BAFA,mDACA,IAGA,uBACA,yBACA,uBACA,qBAEA,oBADA,IAGA,sBACA,mFACA,qEAGA,qDAEA,0EACA,qFAEA,uEACA,6EAGA,YAUA,KATA,eAGA,OAEA,KAEA,+BAGA,6CACA,2CACA,sDACA,gDACA,kDACA,yCACA,sCACA,2CAKA,+BACA,GACA,iBACA,yFAEA,gFAEA,MAKA,iBACA,GAEA,uCACA,2BACA,gIAEA,KACA,4BAKA,iBACA,MAEA,uCACA,4BAEA,gBAGA,oBACA,iCACA,+CACA,SAEA,EAEA,kBAEA,kBAEA,mCAEA,oBACA,oCACA,sCACA,gBAGA,yBACA,IAGA,yCACA,YACA,oBACA,YAGA,iDACA,UACA,wBACA,iBACA,MAAW,KACX,UACA,wBACA,MACA,CAAS,kBAGT,yBACA,IAGA,yCACA,YACA,wBACA,MAAS,kBAGT,yBACA,IAGA,yCACA,YACA,wBACA,MACA,CAEA,kBACA,mBACA,8BACA,wBACA,8BACA,aACA,8BAEA,UACA,MAIA,kBACA,mBACA,8BACA,wBACA,8BACA,aACA,8BAEA,kBACA,MAEA,yBACA,8BACA,sBACA,kCACA,cACA,MAIA,kBACA,mBACA,8BACA,wBACA,8BACA,aACA,8BAEA,kBACA,MAEA,yBACA,8BACA,sBACA,kCACA,cACA,MAEA,oBACA,wBACA,SACA,eACA,oBACA,wBACA,sBACA,YACA,EAKA,iBACA,MAEA,yBACA,0BACA,4BAEA,gBAGA,yBACA,+CAEA,YAGA,qCACA,SACA,kBAEA,aACA,8BACA,KAGA,YAGA,OAFA,kCAGA,KAGA,aAGA,OAFA,kCAGA,KAGA,cACA,oBACA,wBAEA,iBACA,mBACA,kCACA,gBACA,gBACA,aACA,YACA,EAAK,KACL,+BACA,wBACA,4CACA,OACA,CACA,gDA9QA,8ECDA,KAseA,IApeA,KACA,uBACA,MACA,kBACA,kBACA,gCACA,2BACA,QACA,gBACA,qBACA,0BACA,UACA,oBACA,YACA,oBACA,8BACA,kCACA,wBACA,UACA,WACA,EACA,WACA,iBACA,WACA,QACA,UAGA,uEACA,+BACA,cACA,GACA,qBACA,+CAGA,sCAA6C,OAAQ,0CACrD,8BACA,CACA,OACA,wBACA,UACA,6BAEA,kBAEA,8EACA,+BACA,cACA,GACA,qBACA,+CAGA,yCACA,CACA,OACA,wBACA,UACA,6BAEA,kBAEA,gDACA,iCACA,kBACA,aAEA,iDAEA,kGACA,sBAEA,+DACA,sBACA,uDAGA,mBACA,gEAEA,kBAEA,qBACA,wCACA,UACA,yEACA,OACA,MACA,6BAEA,MACA,YACO,aACP,kBACA,kBACA,KACA,CACA,CAEA,gBACA,mBACA,OAEA,aACA,kBACA,KAEA,kBACA,kBACA,KAEA,4BACA,+BACA,2BAEA,yBAEA,qBACA,CACA,WACA,qBACA,aACA,kBACA,cACA,eACA,qBAAc,gBACd,GAIA,aAKA,0CAJA,WAAyB,6CACzB,GAEA,IAGA,uBACA,WAEA,IACA,mBACA,yFACA,gCAGA,YACA,4BACA,qCAEA,uBACA,IACA,IAEA,YAEA,yEACA,qCACA,oCACA,+BACA,YAEA,SACA,yFAEA,gBACA,OACA,iCAEA,mBACA,+BACA,4BACA,iDACA,0DACA,UACA,4CACA,OAEA,KAAS,KACT,IACA,+BAEA,kBACA,EACA,+BAMA,4DAJA,SAEA,KAGA,CAEA,2CACA,OAGA,0BACA,iCACA,yHACA,gCACA,IACA,4CAGA,wGACA,4EAEA,4BACA,CACA,iCACA,gCACA,iCACA,8BACA,yBAGA,aACA,oBACA,mBACA,mDAGA,qBACA,WACA,oFACA,wDACA,6DACA,UACA,2CACA,iDAGA,+CACA,UACA,qDAEA,qCAEA,mCAEA,KAAS,SAET,CACA,oCACA,oEACA,wDACA,yDACA,+CAGA,oCACA,yCACA,uDACA,SAGA,CAEA,IACA,eACA,SACA,CAEA,sBACA,oBAEA,UAGA,OAEA,eAEA,gCAEA,OAEA,WAEA,YAEA,EAEA,YACA,qBAGA,KAtBA,UAGA,eAqBA,UAGA,UADA,UAGA,iBACA,wBACA,gCACA,gBACA,qBACA,eAEA,YAAyB,EACzB,cAAyB,EACzB,UACA,GACA,QAKA,cAHA,wCAIA,WACA,QAEA,oBAGA,gDACA,cACA,gBAEA,qCACA,mBACA,0BACA,2CACA,sCAGA,0CACA,yCACA,oCAIA,8CACA,oBACA,WAEA,UAGA,4BACA,kBACA,WAEA,UAGA,4BACA,kBACA,WAEA,UAGA,sCACA,6CACA,+CACA,wFACA,8CACA,wFACA,0CACA,6CAUA,yBACA,SACA,CAEA,qBACA,+BACA,8CACA,4BAEA,gBAGA,oBAEA,0CACA,uBAEA,uDACA,kCACA,OACA,gBACA,qBACA,oCACA,sBACA,cACA,WACA,SAEA,IAEA,kBACA,4BACA,OACA,cAGA,gBACA,4BACA,+BACA,8EACA,6EACA,QACA,OAEA,mBACA,WAEA,oDAA+D,KAC/D,kBACA,gCACA,qBACA,4BACA,aACA,mBACA,+BACA,uEACA,QACA,OACA,UAEA,mBACA,WAEA,UACA,8DACA,CAEA,sBACA,YACA,YAGA,mBACA,SACA,aAEA,OAEA,kBACA,mEACA,qDACA,sDACA,UACA,QACA,oBACA,eAEA,+BAEA,wCACA,qBACA,wBAEA,sCACA,qCACA,uBACA,GAEA,sBACA,0BACA,aACA,YACA,EACA,CACA,CAEA,sBACA,8DACA,8DACA,OACA,kBC1eA,aAUA,IACA,eAGA,uBACA,cAEA,iCAEA,iCAEA,mCAEA,gCAEA,EADA,uBAIA,KAIA,MASA,OAJA,sBACA,wBAEA,yBCxCA,aAUA,eAEA,mBACA,kBACA,oBAGA,aACA,kBACA,oBACA,aAGA,SACA,MACA,OACA,QACA,QACA,aAGA,YACA,KAIA,SAHA,aACA,aACA,SAMA,CACA,eAEA,OACA,iCAGA,WAGA,iBAEA,YACA,QAQA,CArDA,IAsDA,aAEA,CAGA,MACA,KACA,MAEA,MAGA,SACA,IACA,aACA,UAEA,MACA,IAEA,IAEA,OACA,SACA,MAAK,OAEL,SACA,yBC1FA,QAOA,gBACA,wBACA,4BAEA,uEAKA,YAAC,mBAED,cAMA,OACA,oBAMA,cACA,qBACA,QAEA,cACA,kBAAoC,8BACpC,OAMA,gBACA,qCACA,MAIA,gBAEA,UACA,SAEA,cAEA,QACA,MAEA,gBA8CA,aAYA,OACA,UACA,mBAEA,WAGA,MACA,KACA,IAEA,cAEA,IACA,iCAEA,WACA,6BAEA,yCACA,gCACA,2BAA0D,MAC1D,IAEA,IAnCA,GAEA,iBAqBA,EApBA,KACA,KACA,KACA,KAIA,YA2BA,wBAGA,IADA,mBAEA,CAMA,OAHA,QAEA,+BACmD,OAAiB,IACpE,QAEA,UACA,cAEA,QAGA,0BACA,OAGA,EACA,UAKA,UACA,QAEA,SAGA,kBACA,SAGA,QACA,aACA,eACA,UACO,cACP,aACA,eACA,UACA,eAEA,SAIA,gBACA,6CAEA,mBACA,OAEA,iBACA,UACO,wBAEP,QAEA,MACA,0CAEA,gBACA,iDACA,UAAO,iBAAwC,SAC/C,QACO,KAEP,SAEA,IAGA,CAGA,OADA,4DAGA,cACA,KAMA,cACA,WAGA,EADA,aAC8C,OAAe,IAC7D,MAGA,2BACA,uBACA,UAEA,OACA,QAKA,MACA,QAQA,cACA,WAKA,EAJA,KACA,IAEA,aAC8C,OAAe,IAC7D,aAEA,OACA,QACA,QACA,MACA,UACA,YACA,MACA,UACA,QACA,aACA,8BACA,KACA,MACA,UAIA,SACA,QAMA,cACA,MACA,cACA,gBACA,CAKA,gBAoDA,MACA,kBAAkB,UAClB,WACA,QAMA,aAkEA,MACA,QAKA,wBAjaA,qCACA,OACA,4BAEA,qBA2BA,OAKA,KAeA,wGAOA,QACA,QACA,SACA,UAwBA,+CAwMA,OACA,cAMA,8BACA,iBAEA,gBACA,kBAEA,WAEA,GAIA,uCAHA,oBAEA,QAOA,mCACA,IAGA,yBAeA,OAdA,cACA,eAEA,IACA,QAGA,0BACA,yBAGA,0BAEA,QAOA,8BAWA,gBACA,KAMA,gCACA,IAGA,UADA,WAEA,oBACK,SACL,oBAEA,QACA,IACA,yBACA,eACA,OAaA,eACA,qBACA,UAEA,aAGA,eACA,cAGA,QACA,KAEA,UACA,MAEA,CACA,MAEA,CAIA,MAHA,sBAEA,QAQA,mCAQA,MACA,QAMA,iCACA,YACA,QAEA,KAIA,MAHA,kBAEA,SAYA,oCACA,YACA,4BACA,qBACA,qBAWA,4CACA,aAGA,IADA,WAC8C,OAAe,IAC7D,IACA,WACA,SAEA,kBACA,sCACA,uCACA,sCACA,sCACA,sCAEA,aACA,aAGA,MACA,QAEA,6CACA,cAOA,UACA,aAEA,OATA,OACA,gBAIA,IAMA,SACA,qBAAiD,OAAiB,IAClE,qCAEK,2DACL,+CACK,0BACL,IACA,mCAGA,iGAEA,OACA,UACA,KACA,6BAEA,UACA,SAEA,8CACA,kBAIA,iBACA,wCACA,SAEA,2CACA,CAEA,6BACA,OACA,sCACA,gBAEA,0CACA,kBACA,OACA,QACA,QAEA,wCACA,kBACA,OACA,iBACA,SAEA,kCACA,UACA,EAEA,SACA,wBACA,UAGA,uBAKA,MAmDA,8BAlDA,UACA,YAOA,uBACA,UACA,UAMA,0BACA,IACA,uCACA,wDAIA,iGACA,aAIA,6BAGA,SAEA,oBACA,UAIA,OAIA,IAGA,kBAziBA,gDACA,OACA,KACA,EAEA,IAqiBA,YACA,YAEA,UACC,sEClnBD,KAEA,OACA,cAAe,4EAA8E,YAC7F,MACA,iBACA,aACA,qBACA,gBACA,eACA,aAEA,gBAGA,kCAFA,wCAIA,IAEA,SACA,KAAS,iEAAoE,YAC7E,qBACA,gBAAY,4EACZ,WAEA,mBACA,OACA,SACA,EAkHA,IAhHA,KACA,eACA,MACA,oBACA,YACA,SAEA,kCACA,aAAgB,gBAAsB,OACtC,cACA,iCACA,qBACA,wEACA,mFACA,0BACA,YACA,wBACA,OACA,aACA,OACA,iBACA,YACA,UACA,aACA,UAGA,gCAA2C,iBAE3C,gBACA,iBACA,YACA,cACA,GACA,YACA,mBAAgB,gBAAsB,OACtC,sCACA,uCACA,+CAGA,EAEA,mCACA,OACA,IACA,KACA,qBAGA,CACA,mBAGA,cACA,QACA,IACA,SAAsB,SAAoB,WAC1C,OACA,OACA,kBACA,WACA,wEACA,SACA,IACA,QACA,KAjBA,KAkBA,aACS,cACT,IACA,EACA,KACA,KACA,CAEA,OACA,CACA,yBAGA,qBACA,qBACA,eAA+B,iCAC/B,UACA,mCACA,YACA,GACA,CAEA,eACA,mCACA,4CACA,8BAAkC,oBAClC,EAAK,KACL,UACA,6CACA,mFACA,iCACA,oCAEA,sBAA+B,UAAW,MAC1C,QAEA,cACA,kCAEA,oFACA,QAEA,aACA,MAEA,kBCzHA,aACA,iBACA,6CACA,KAQA,CACA,iBACA,OACA,cAEA,mBAEA,GAQA,CACA,iBACA,0BACA,QAQA,CACA,iBACA,OACA,cAEA,IAEA,CAQA,CACA,iBACA,OACA,cAEA,OAEA,OAQA,CACA,iBACA,OACA,cAEA,yBAEA,EAQA,CACA,iBACA,OACA,cAEA,yBAEA,EAQA,CACA,iBACA,OACA,cAEA,qBAEA,QAQA,CACA,iBACA,OACA,cAEA,4BAEA,EAQA,CACA,iBACA,uBAEA,0CACA,EAOA,gDAEA,iBACA,YAEA,2BAEA,aAsBA,IAGA,yBACA,aACA,KAGA,MAEA,SAEA,2BAAoB,WACpB,MAES,4CAET,0BAiBA,iBAIA,gDApBA,WACa,YAEb,OACA,UAAwB,WACxB,WACA,UACA,OAEA,MAGA,CAGA,SAKgB,WAAmB,IACnC,OACA,IACA,IAGA,yBACA,oBAIA,YAAsB,GAAM,6BAE5B,QAGA,QAJA,cASA,gBAAsB,MAAoB,gCAE1C,QAGA,QAJA,cAQA,wBACA,KACA,CAEA,OA5EA,EAjBA,OACA,CACA,UACA,WACA,eACA,UACA,YACA,WACA,SACA,WACA,UAEA,aACA,OACA,KACA,OACA,wBAC6B,UAAa,EAC1C,eAA6B,UAAa,EAE1C,EA0HA,0BAhDA,kBACA,QAGA,QAEA,sBACA,eAA8B,OAE9B,YACA,wCAGA,kBAGA,MADA,MAGA,iBACA,kBACA,QAEA,QAEA,iBACA,kBACA,QAEA,QAEA,qBACA,CACA,QAEA,oBACA,kBACA,QAGA,QAEA,oBACA,CAGA,MADA,MAGA,sBCxTA,GAqBC,eACD,CAMA,4BACA,kBACA,mCACA,QACA,OAKA,gBACA,iBACA,IAKA,wBACA,qBACA,aACA,0BACA,cACA,eACA,0BACA,gBACA,aACA,0BACA,UACA,gBACA,0BACA,eACA,cAKA,gBAEA,iBACA,mBAEA,SACA,GACA,EACA,EACA,EACA,IACA,cACA,aACA,aAEA,gBAAe,MAAc,UAC7B,GACA,IACA,IACA,IAEA,wBACA,kCACA,iCACA,kCACA,kCACA,iCACA,mCACA,mCACA,+BACA,mCACA,oCACA,+BACA,kCACA,oCACA,kCACA,mCAEA,kCACA,iCACA,mCACA,gCACA,iCACA,iCACA,kCACA,kCACA,gCACA,kCACA,mCACA,iCACA,mCACA,kCACA,gCACA,oCAEA,kCACA,+BACA,mCACA,oCACA,gCACA,kCACA,mCACA,mCACA,kCACA,gCACA,kCACA,iCACA,gCACA,mCACA,kCACA,kCAEA,+BACA,iCACA,oCACA,mCACA,gCACA,mCACA,oCACA,gCACA,iCACA,oCACA,iCACA,mCACA,kCACA,mCACA,kCACA,kCAEA,aACA,SACA,SACA,SAEA,aACA,SAKA,cACA,IACA,KACA,KACA,kBAAe,EAAc,OAC7B,yBAEA,oBACA,QAMA,cACA,IACA,GACA,yBACA,YAAe,MAAmB,UAClC,OAEA,QACA,iBAAe,EAAa,OAC5B,sCAEA,GACA,QAKA,cACA,iBACA,YAKA,gBACA,IACA,GAIA,IAHA,KACA,KACA,iBAEA,WACA,oBAEA,eAAe,EAAQ,QACvB,OACA,oBAEA,8CACA,kBACA,eAKA,cACA,IAGA,GACA,IAHA,qBACA,SAEe,MAAkB,UACjC,MACA,0BACA,mBAEA,MACA,QAKA,cACA,iBACA,sBAKA,cACA,UACA,KACA,cACA,UACA,KACA,gBACA,eACA,KACA,gBACA,UACA,OAEA,kBAGA,YAQA,OADA,SAFA,KAHA,IASA,aACA,CACA,QAAK,iCAML,WAAC,qCCxRD,GAEA,qBACA,qBAKA,uBACA,QACA,6CAEA,uCAEA,0EACA,sEACA,iEACA,qEACA,oDACA,oCACA,mCACA,sCAKA,qCACA,2CACA,qEACA,4BAEA,OACA,WACA,IAEA,KADA,EAEA,mCACA,SAEA,iBACA,MAGA,MAGA,SACA,kDACA,KAIA,4BACA,UACA,WACA,UAKA,WACA,qBACA,KACA,gBAEA,OAEA,UAGA,QACA,OACA,IAEA,CACA,QACA,EAEA,iBACA,cACA,CACA,aACA,wBACA,CACA,EAEA,iBACA,cACA,CACA,aACA,wBACA,EACA,QAEA,OACA,qBACA,MACA,cACA,cACA,eAEA,uCACA,yBAEA,QACA,kBAEA,wEACA,MACA,qCACA,aACA,YACA,EACA,EAEA,+BACA,aACA,mDACA,gEACA,yEACA,uBACA,iBACA,kBAEA,SAEA,iBACA,WACA,iBAGA,mCACA,OAEA,cACA,WACA,iBAGA,mCACA,aAEA,IACA,EA+CA,IA7CA,eACA,qBACA,CAEA,8BACA,2BACA,kBAEA,gCACA,qBACA,CAEA,SACA,MACA,mFACA,oCACA,SACA,wBACA,iCAEA,6BACA,sCAEA,YACA,oDAGA,oBACA,8CACA,OACA,EACA,QAGA,eACA,4BAEA,8BACA,yBACA,YACA,uBACA,0BAEA,aAEA,GAuBA,IArBA,eACA,qBACA,CAEA,8BACA,2BACA,kBACA,KAEA,SACA,MACA,mFACA,oCACA,SACA,oCACA,UACA,uBACA,0BAEA,aAEA,GA+CA,IA7CA,eACA,qBACA,CAEA,8BACA,2BACA,kBAEA,gCACA,qBACA,CAEA,SACA,MACA,mFACA,oCACA,SACA,iCAEA,kDACA,MACA,sCAEA,YACA,oDAGA,oBACA,8CACA,OACA,EACA,QAGA,eACA,4BAEA,8BACA,YACA,CACA,uBACA,0BAEA,aAEA,GAqBA,IAnBA,eACA,qBACA,CAEA,8BACA,2BACA,KAEA,SACA,MACA,mFACA,+BACA,iBACA,OACA,uBACA,0BAEA,aAEA,GA+CA,IA7CA,KACA,cACA,MACA,kBACA,wBAEA,UACA,oBACA,qBAEA,SACA,oBACA,8DACA,sCACA,uBACA,qBACA,uBACA,MAEA,kBACA,4BACA,MAAO,EAEP,UACA,YACA,CAEA,iBACA,WACA,iBAGA,mCACA,OAEA,cACA,WACA,iBAGA,mCACA,aAEA,IAEA,oBCxUA,yBAsBA,CAEA,aACA,CACA,QACA,MACA,kBAEA,SACA,WACA,MACA,mBAIA,IAHA,8BAEA,cAEA,OACA,MAA4B,OAAY,IAExC,MACA,iBACA,MACA,IAEA,cACA,kBAEO,OACP,QAEA,IACA,KAKA,YACA,KACA,MACA,MAA8B,OAAY,IAE1C,MACA,gBAGA,QACA,kBAIA,MAsBA,iBACA,CACA,iBAEA,mBAEA,MAEA,aACA,uCACA,MAEA,aACA,8BACA,aAjCA,YACA,YACA,YACA,uBACA,MASA,wFACA,OACA,KACA,gCACA,SAkBA,sBACA,GACA,cAEA,oBACA,OACA,aAEA,iBACA,OACA,8BACA,MAEA,oBACA,OACA,iCACA,OAEA,iBACA,YACA,UAEA,mBACA,aACA,OAEA,uBACA,OACA,yDACA,yBACA,cACA,KAAK,EACL,KAAG,EACH,KASA,EAEA,mBACA,CACA,UAEA,qBACA,WACA,iBACA,WAEA,MADA,OAEA,IACA,SAAuB,OAEvB,mBAGA,qBACA,MAEA,cAEA,8BAEA,iBACA,IACA,gBACA,QAAK,SACL,CACA,QACA,CAGA,IACA,uCACA,qBACA,WACA,uCACA,WACA,wBACA,YACA,iDACA,cACA,KAAa,EACb,KAAW,EACX,KAGA,GACA,8BACA,IACA,gCAA0C,GAAkB,OAC5D,SACA,gBACA,SACA,eAAkB,gBAClB,QAIA,GAMA,wCALA,CACA,QAGA,IAIA,GACA,kCACA,IACA,8BAAoC,GAAmB,OACvD,SACA,gBACA,SACA,eAAkB,gBAClB,QAIA,GAMA,wCALA,CACA,QAGA,IAIA,GACA,oCACA,IACA,gCAA0C,QAA2B,MACrE,SACA,gBACA,SACA,eAAkB,gBAClB,QAIA,GAMA,wCALA,CACA,QAGA,IAIA,eACA,sCAGA,SACA,8BACA,KACA,QAOA,SANA,cACA,WACA,KACA,qBACA,MAGA,QACA,UACA,KACA,QACA,SAEA,qBACA,QACA,WAIA,WACA,SAAiB,MAAiB,OAClC,gBAEA,YAAiB,MAAiB,OAClC,MACA,wBAEA,QAGA,EAAC,4CC9SD,GAGA,aACA,OACA,KAAC,IAED,GAEA,0CACA,OAAC,SAED,CACA,4BACA,OAI4C,CAE5C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d84c2518110c66252a22","\nexport function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function fileRead(file) {\n  return new Promise(function(resolve,reject) {\n    let reader = new FileReader();\n    reader.onload = e => {\n      resolve(e.target.result);\n    };\n    reader.onerror = e => {\n      reject(e.target.error);\n    };\n    reader.readAsText(file, \"UTF-8\");\n  });\n}\n\nexport function readCharacteristicValue(characteristic) {\n  return new Promise(function(resolve,reject) {\n    let executed = false;\n    let listener = event => {\n      characteristic.removeEventListener('characteristicvaluechanged', listener);\n      characteristic.stopNotifications();\n      if(!executed) {\n        executed = true;\n        resolve(event.target.value);\n      }\n    }\n\n    characteristic.addEventListener('characteristicvaluechanged', listener);\n    characteristic.startNotifications();\n  });\n}\n\nexport function dateFormat(dt) {\n  let month = dt.getUTCMonth() + 1;\n  month = (month < 10) ? \"0\" + month : month;\n\n  let day = dt.getUTCDate();\n  day = (day < 10) ? \"0\" + day : day;\n\n  let hours = dt.getUTCHours();\n  hours = (hours < 10) ? \"0\" + hours : hours;\n\n  let minutes = dt.getUTCMinutes();\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n\n  let seconds = dt.getUTCSeconds();\n  seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n  return dt.getUTCFullYear() + \"-\" + month + \"-\" + day + \"T\" + hours + \":\" + minutes + \":\" + seconds + \"Z\";\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/utils.js\n// module id = 0\n// module chunks = 0","let elevationService = new google.maps.ElevationService();\nlet streetViewService = new google.maps.StreetViewService();\nlet geocoder = new google.maps.Geocoder;\n\nexport function geocode(location) {\n  return new Promise(function(resolve,reject) {\n    geocoder.geocode({'location': location}, function(results, status) {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(new Error(status));\n      }\n    });\n  });\n}\n\nexport function getPanoramaByLocation(location, radius) {\n  return new Promise(function(resolve,reject) {\n    let request = {\n      location: location,\n      radius: radius\n    };\n    streetViewService.getPanorama(request, (results, status) => {\n      if (status == google.maps.StreetViewStatus.OK) {\n        resolve(results);\n      } else {\n        reject(new Error(status));\n      }\n    });\n  });\n}\n\nexport function getElevationAlongPath(elevationRequest) {\n  return new Promise(function(resolve,reject) {\n    elevationService.getElevationAlongPath(elevationRequest, (results, status) => {\n      if (status == google.maps.ElevationStatus.OK) {\n        resolve(results);\n      } else {\n        reject(new Error(status));\n      }\n    });\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/gmapPromises.js\n// module id = 1\n// module chunks = 0","import {registerUI} from './ui';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  registerUI();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 2\n// module chunks = 0","import {GPedalDisplay} from './GPedalDisplay';\nimport {GPXRoutePointFactory} from './Route';\nimport {fileRead, readCharacteristicValue} from './lib/utils';\nimport {VirtualPowerMeter, BlePowerCadenceMeter, BleCadenceMeter,\n    BlePowerMeter, BleHRMeter, CyclingPowerMeasurementParser} from './Meter';\nimport URLSearchParams from 'url-search-params';\n\nexport function registerUI() {\n  let thisLocationURL = new URL(window.location);\n  let params = new URLSearchParams(thisLocationURL.search);\n  if(params.get('state') && params.get('code')) {\n    let code = params.get('code');\n    localStorage.setItem('strava-oauth-code', code);\n    window.location.assign('/');\n    return;\n  }\n\n  let proto = window.location.protocol;\n  if(proto !== 'https:') {\n    let host = window.location.host;\n    let self = 'https://' + host + '/';\n    window.location.assign(self);\n  }\n\n  if(localStorage.getItem('strava-oauth-code')) {\n    document.getElementById('strava-btn-connect').style.display = 'none';\n    document.getElementById('strava-btn-connected').style.display = 'block';\n  }\n\n  if (typeof navigator !== 'undefined' && \"bluetooth\" in navigator) {\n    // web bluetooth available\n    document.getElementById('btn-bluetooth-device').style.display = 'inline-block';\n    document.getElementById('btn-bluetooth-device-warning').style.display = 'none';\n  } else {\n    document.getElementById('btn-bluetooth-device').style.display = 'none';\n    document.getElementById('btn-bluetooth-device-warning').style.display = 'block';\n  }\n\n  let powerMeters = [\n    ['virtual', new VirtualPowerMeter()]\n  ]\n\n  let heartMeters = []\n\n  let cadenceMeters = []\n\n  let mapDisplay;\n\n  let $gpx = document.getElementById('gpx-file-upload');\n  let $btn = document.getElementById('begin-session');\n  let $btntxt = document.getElementById('btn-bluetooth-device-txt');\n  let $stva = document.getElementById('strava-btn-connect');\n  let $blt = document.getElementById('btn-bluetooth-device');\n  let $pm = document.getElementById('power-meter');\n  let $hm = document.getElementById('hr-meter');\n  let $cm = document.getElementById('cadence-meter');\n  let $mob = document.getElementById('menuopen-btn');\n\n  /**\n  Menu open Handler\n  */\n  $mob.onclick = (e) => {\n    e.preventDefault();\n    if(document.getElementById('ui-finalize-container').style.display === 'none') {\n      mapDisplay.showFinalizeUI(\"Complete Ride\");\n    } else {\n      document.getElementById('ui-finalize-container').style.display = 'none';\n    }\n  };\n\n  /**\n  Strava Connect Handler\n  */\n  $stva.onclick = (e) => {\n    e.preventDefault();\n\n    let proto = window.location.protocol;\n    let host = window.location.host;\n    let self = proto + '//' + host + '/';\n\n    window.location.assign(\"https://www.strava.com/oauth/authorize?client_id=19775&response_type=code&redirect_uri=\"+self+\"&scope=write&state=strava\");\n  };\n\n  /**\n  Bluetooth Button Handler\n  */\n  $blt.onclick = (e) => {\n    e.preventDefault();\n\n    if(!$blt.classList.contains('disabled')) {\n      $blt.classList.add('disabled');\n    } else {\n      return;\n    }\n\n    $btntxt.innerHTML = \"Connecting ...\";\n    (async function() {\n      let device = await navigator.bluetooth.requestDevice({\n        filters: [\n          // https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.service.heart_rate.xml\n          {services: [0x180D]},\n          // https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.service.cycling_power.xml\n          {services: [0x1818]},\n          // https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.service.cycling_speed_and_cadence.xml\n          {services: [0x1816]}]\n      });\n      let server = await device.gatt.connect();\n\n      let services = await server.getPrimaryServices();\n      for(let service of services) {\n        let serviceId = parseInt(service.uuid.substring(0,8), 16);\n        if(serviceId === 0x1818) {\n          // org.bluetooth.service.cycling_power\n\n          if(powerMeters.find(m => m[0] === device.id)) {\n            continue;\n          }\n\n          let characteristic = await service.getCharacteristic(0x2A63);\n          let parser = new CyclingPowerMeasurementParser();\n          let value = await readCharacteristicValue(characteristic);\n          let data = parser.getData(value);\n\n          // is Crank Revolution Data Present ?\n          if('cumulative_crank_revolutions' in data) {\n            let meter = new BlePowerCadenceMeter(device, server, service, characteristic);\n            powerMeters.push([meter.id, meter]);\n            cadenceMeters.push([meter.id, meter]);\n          } else {\n            let powerMeter = new BlePowerMeter(device, server, service, characteristic);\n            powerMeters.push([powerMeter.id, powerMeter]);\n          }\n        } else if(serviceId === 0x1816) {\n          // org.bluetooth.service.cycling_speed_and_cadence\n\n          if(cadenceMeters.find(m => m[0] === device.id)) {\n            continue;\n          }\n\n          let characteristic = await service.getCharacteristic(0x2A5B);\n          let cadenceMeter = new BleCadenceMeter(device, server, service, characteristic);\n          cadenceMeters.push([cadenceMeter.id, cadenceMeter]);\n        } else if(serviceId === 0x180D) {\n          // org.bluetooth.service.heart_rate\n\n          if(heartMeters.find(m => m[0] === device.id)) {\n            continue;\n          }\n\n          let characteristic = await service.getCharacteristic(0x2A37);\n          let hrMeter = new BleHRMeter(device, server, service, characteristic);\n          heartMeters.push([hrMeter.id, hrMeter]);\n        }\n      }\n\n      $pm.options.length = 0;\n      for(let [key, pm] of powerMeters) {\n        var $option = document.createElement(\"option\");\n        $option.innerHTML = pm.name;\n        $option.setAttribute('value', pm.id);\n        if(pm.id === device.id) {\n          $option.setAttribute('selected', 'true');\n        }\n        $pm.add($option);\n      }\n\n      //\n\n      $hm.options.length = 0;\n      for(let [key, hm] of heartMeters) {\n        var $option = document.createElement(\"option\");\n        $option.innerHTML = hm.name;\n        $option.setAttribute('value', hm.id);\n        if(hm.id === device.id) {\n          $option.setAttribute('selected', 'true');\n        }\n        $hm.options.add($option);\n      }\n\n      if($hm.options.length === 0) {\n        var $option = document.createElement(\"option\");\n        $option.innerHTML = 'Disabled';\n        $option.setAttribute('value', '');\n        $hm.options.add($option);\n      }\n\n      //\n\n      $cm.options.length = 0;\n      for(let [key, cm] of cadenceMeters) {\n        var $option = document.createElement(\"option\");\n        $option.innerHTML = cm.name;\n        $option.setAttribute('value', cm.id);\n        if(cm.id === device.id) {\n          $option.setAttribute('selected', 'true');\n        }\n        $cm.options.add($option);\n      }\n\n      if($cm.options.length === 0) {\n        var $option = document.createElement(\"option\");\n        $option.innerHTML = 'Disabled';\n        $option.setAttribute('value', '');\n        $cm.options.add($option);\n      }\n\n      $blt.classList.remove('disabled');\n      $btntxt.innerHTML = \"Connect\";\n    })()\n    .catch(error => {\n      $blt.classList.remove('disabled');\n      $btntxt.innerHTML = \"Connect\";\n      console.log(\"Error: \", error);\n    });\n  };\n\n  /**\n  Begin Button Handler\n  */\n  $btn.onclick = (e) => {\n    e.preventDefault();\n\n    if($gpx.value) {\n      if(!$btn.classList.contains('disabled')) {\n        $btn.classList.add('disabled');\n      } else {\n        return;\n      }\n\n      (async function() {\n        let weight = document.getElementById('rider-weight').value;\n        if(!weight) {\n          weight = 220;\n        }\n\n        let fileBody = await fileRead($gpx.files[0]);\n        let factory = new GPXRoutePointFactory(fileBody);\n        let points = await factory.create();\n\n        let powerMeterID = $pm.value;\n        let powerMeter = powerMeters.find(m => m[0] === powerMeterID)[1];\n        powerMeter.listen();\n\n\n        let heartMeterID = $hm.value;\n        let heartMeter;\n        if(heartMeterID) {\n          heartMeter = heartMeters.find(m => m[0] === heartMeterID)[1];\n          heartMeter.listen();\n        }\n\n        let cadenceMeterID = $cm.value;\n        let cadenceMeter;\n        if(cadenceMeterID) {\n          cadenceMeter = cadenceMeters.find(m => m[0] === cadenceMeterID)[1];\n          cadenceMeter.listen();\n        }\n\n        GPedalDisplay.transitionUI();\n        mapDisplay = new GPedalDisplay(points, weight, powerMeter, heartMeter, cadenceMeter);\n        await mapDisplay.geocodeRoute();\n\n        mapDisplay.updateUI();\n        await mapDisplay.updatePosition();\n        mapDisplay.showFinalizeUI(\"Ride Finished\");\n      })()\n      .catch(error => {\n        console.log(\"Error: \", error);\n      });\n    } else {\n      let $msg = document.getElementById('messages');\n      $msg.innerHTML = \"Please select a GPX file.\";\n      $msg.style.display = 'block';\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui.js\n// module id = 3\n// module chunks = 0","import {geocode, getPanoramaByLocation} from './gmapPromises';\nimport {timeout, dateFormat} from './lib/utils';\nimport {CalculateRho} from './lib/air_density';\nimport {CalculateVelocity} from './lib/power_v_speed';\nimport Mustache from 'mustache';\n\nexport class GPedalDisplay {\n  constructor(points, riderWeight, powerMeter, heartMeter, cadenceMeter) {\n    this.powerMeter = powerMeter;\n    this.heartMeter = heartMeter;\n    this.cadenceMeter = cadenceMeter;\n    this.riderWeight = parseInt(riderWeight);\n    this.routeName = '';\n    this.history = [];\n    this.powerSamples = [];\n    this.points = points;\n    this.ridingState = {\n      pointIdx: 0,\n      point: this.points[0],\n      pointPct: 0,\n      lastSampleTime: new Date(),\n      location: this.points[0].location,\n      elevation: this.points[0].elevation,\n      average_grade: 0,\n      mapMode: 'SV',\n      watts: 0,\n      rpm: undefined,\n      bpm: undefined,\n      speed: 0,\n      distance: 0,\n      climb: 0,\n      elapsed: 0,\n    };\n\n    this.miniMap = new google.maps.Map(document.getElementById('tracker'), {\n      center: this.ridingState.point.location,\n      zoom: 14,\n      fullscreenControl: false,\n      zoomControl: true,\n      mapTypeId: google.maps.MapTypeId.TERRAIN\n    });\n\n    let simplePoints = this.points.map(p => {return {lat: p.location.lat(), lng: p.location.lng()}});\n    let miniRoutePath = new google.maps.Polyline({\n      path: simplePoints,\n      geodesic: true,\n      strokeColor: '#0c7ac9',\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n    miniRoutePath.setMap(this.miniMap);\n\n    this.fullMap = new google.maps.Map(document.getElementById('map-view'), {\n      center: this.ridingState.point.location,\n      zoom: 18,\n      fullscreenControl: false,\n      zoomControl: true,\n      mapTypeId: google.maps.MapTypeId.TERRAIN\n    });\n\n    let routePath = new google.maps.Polyline({\n      path: simplePoints,\n      geodesic: true,\n      strokeColor: '#0c7ac9',\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n    routePath.setMap(this.fullMap);\n\n    this.fullMarker = new google.maps.Marker({\n        position: this.ridingState.point.location,\n        map: this.fullMap,\n        icon: '/images/here.png'\n    });\n    this.fullMarker.setMap(this.fullMap);\n\n    let streetview = this.streetViewPanoramaInit(this.ridingState.point.location, this.ridingState.point.heading);\n    this.miniMap.setStreetView(streetview);\n\n    this.powerMeter.addListener('power', power => this.collectPower(power));\n    if(this.heartMeter) {\n      this.heartMeter.addListener('hr', hr => this.collectHR(hr));\n    }\n\n    if(this.cadenceMeter) {\n      this.cadenceMeter.addListener('cadence', cadence => this.collectCadence(cadence));\n    }\n  }\n\n  async geocodeRoute() {\n    let geoResults = await geocode(this.points[0].location);\n    let skipTypes = [\"street_address\", \"route\", \"intersection\", \"postal_code\"];\n    for(let r of geoResults) {\n      let type = '';\n      if(r.types.length > 0) {\n        type = r.types[0];\n      }\n      if(skipTypes.includes(type)) {\n        continue;\n      } else {\n        this.routeName = r.formatted_address;\n        break;\n      }\n    }\n  }\n\n  collectPower(power) {\n    this.powerSamples.push(power);\n  }\n\n  collectHR(hr) {\n    this.ridingState.bpm = hr;\n  }\n\n  collectCadence(cadence) {\n    this.ridingState.rpm = cadence;\n  }\n\n  streetViewPanoramaInit(location, heading) {\n    let $sv = document.getElementById(\"street-view\");\n    $sv.innerHTML = \"\";\n\n    let streetview = new google.maps.StreetViewPanorama(\n      $sv,\n      {\n        visible: true,\n        fullscreenControl: false,\n        clickToGo: false,\n        addressControl: false,\n        panControl: false,\n        zoomControl: false,\n        linksControl: false,\n        pov: {heading: heading, pitch: 0},\n        position: location\n      }\n    );\n\n    streetview.addListener('status_changed', () => {\n      streetview.setPov({heading: this.ridingState.point.heading, pitch: 0});\n    });\n\n    return streetview;\n  }\n\n  async updatePosition() {\n    let tick = 0;\n\n    while(true) {\n      if(this.powerSamples.length) {\n        this.ridingState.watts = this.powerSamples.reduce((a, b) => a + b, 0) / this.powerSamples.length;\n        this.powerSamples.length = 0\n      }\n\n      let now = new Date();\n      let duration = (now - this.ridingState.lastSampleTime) / 1000;\n      this.ridingState.lastSampleTime = now;\n\n      let capacity_remaining = 1;\n      let total_distance = 0;\n      let average_grade = 0;\n\n      while(capacity_remaining > 0) {\n        //console.log(this.ridingState.point.smoothedGrade, this.ridingState.point.grade, this.ridingState.point.elevation, this.ridingState.pointIdx);\n        let velocity = this.speedFromPower(this.ridingState.watts, this.ridingState.point.smoothedGrade,\n          this.ridingState.point.elevation);\n        let smoothed_velocity = this.ridingState.speed + ((velocity - this.ridingState.speed) * 0.2);\n        if(smoothed_velocity < 0.447) {\n          smoothed_velocity = 0;\n        }\n        let can_travel = smoothed_velocity * duration * capacity_remaining;\n        let distance_left = this.ridingState.point.distance - (this.ridingState.point.distance * this.ridingState.pointPct);\n\n        if(can_travel > distance_left) {\n          let capacity_used = distance_left / can_travel;\n          average_grade += this.ridingState.point.smoothedGrade * capacity_used;\n\n          capacity_remaining = capacity_remaining - (capacity_remaining * capacity_used);\n          this.ridingState.pointIdx += 1;\n          this.ridingState.pointPct = 0;\n          this.ridingState.climb += this.ridingState.point.climb;\n          this.ridingState.point = this.points[this.ridingState.pointIdx];\n          total_distance += distance_left;\n          if(this.ridingState.pointIdx >= this.points.length) {\n            break;\n          }\n        } else {\n          let capacity_used = capacity_remaining;\n          average_grade += this.ridingState.point.smoothedGrade * capacity_used;\n\n          capacity_remaining = 0;\n          if(distance_left !== 0) {\n            this.ridingState.pointPct = 1 - ((distance_left - can_travel) / this.ridingState.point.distance);\n            //console.log(this.ridingState.speed, velocity, smoothed_velocity, can_travel, distance_left, this.ridingState.pointPct);\n            total_distance += can_travel;\n          } else {\n            this.ridingState.pointPct = 0;\n          }\n        }\n      }\n\n      if(this.ridingState.pointIdx >= this.points.length) {\n        break;\n      }\n\n      this.ridingState.average_grade = average_grade;\n      this.ridingState.distance += total_distance;\n      this.ridingState.elevation = this.ridingState.point.elevation + (this.ridingState.point.opposite * this.ridingState.pointPct);\n      this.ridingState.speed = (total_distance / duration);\n      if(this.ridingState.speed > 0) {\n        this.ridingState.elapsed += duration;\n      }\n\n      this.ridingState.location = google.maps.geometry.spherical.interpolate(this.ridingState.point.location,\n        this.points[this.ridingState.pointIdx+1].location, this.ridingState.pointPct);\n\n      this.history.push({\n          time: now,\n          location: this.ridingState.location,\n          power: this.ridingState.watts,\n          elevation: this.ridingState.elevation,\n          hr: this.ridingState.bpm,\n          cad: this.ridingState.rpm\n      });\n\n      if(tick % 5 === 0) {\n        let streetview = this.miniMap.getStreetView();\n        try {\n          let data = await getPanoramaByLocation(this.ridingState.location, 50);\n\n          // Is this a user submitted panorama?  If so, don't display it.\n          if(!('profileUrl' in data.location)) {\n            if(this.ridingState.mapMode === 'MV') {\n              document.getElementById('map-view').style.display = 'none';\n              document.getElementById('tracker').style.display = 'block';\n              document.getElementById('street-view').style.display = 'block';\n              streetview.setVisible(true);\n              google.maps.event.trigger(streetview, 'resize');\n              google.maps.event.trigger(this.miniMap, 'resize');\n            }\n\n            this.miniMap.panTo(this.ridingState.location);\n            if(this.ridingState.mapMode === 'MV') {\n              streetview.setPano(data.location.pano);\n            } else {\n              streetview.setPosition(this.ridingState.location);\n            }\n            this.ridingState.mapMode = 'SV';\n          }\n        } catch (error) {\n          // streetview not available\n          if(this.ridingState.mapMode === 'SV') {\n            streetview.setVisible(false);\n            document.getElementById('street-view').style.display = 'none';\n            document.getElementById('tracker').style.display = 'none';\n            document.getElementById('map-view').style.display = 'block';\n            google.maps.event.trigger(this.fullMap, 'resize');\n          }\n\n          this.ridingState.mapMode = 'MV';\n          this.fullMap.panTo(this.ridingState.location);\n          this.fullMarker.setPosition(this.ridingState.location);\n        }\n\n        //console.log(this.ridingState.location.lat(), this.ridingState.location.lng(), this.ridingState.point.heading);\n      }\n\n      tick += 1;\n      await timeout(1000);\n    }\n  }\n\n  speedFromPower(power, grade, elevation) {\n    let temp = 23.8889;\n    let pressure = Math.exp(-elevation / 7000) * 1000;\n    let dew = 7.5;\n\n    let options = {\n      units: 'metric',\n      // Rider Weight\n      rp_wr: this.riderWeight * 0.453592,\n      // Bike Weight\n      rp_wb: 8,\n      //  Frontal area A(m2)\n      rp_a: 0.65,\n      // Drag coefficient Cd\n      rp_cd: 0.63,\n      // Drivetrain loss Lossdt (%)\n      rp_dtl: 4,\n      // Coefficient of rolling resistance Crr\n      ep_crr: 0.005,\n      // Grade %\n      ep_g: grade,\n      ep_rho: CalculateRho(temp, pressure, dew)\n    }\n\n    let velocity = CalculateVelocity(power, options);\n    // convert to m/s\n    velocity = velocity * 0.277778;\n\n    return velocity;\n  }\n\n  async updateUI() {\n    while(true) {\n      let sec_num = this.ridingState.elapsed.toFixed();\n      let hours   = Math.floor(sec_num / 3600);\n      let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n      let seconds = sec_num - (hours * 3600) - (minutes * 60);\n      //if (hours   < 10) {hours   = \"0\"+hours;}\n      if (minutes < 10) {minutes = \"0\"+minutes;}\n      if (seconds < 10) {seconds = \"0\"+seconds;}\n      let time;\n      if(hours !== 0) {\n        time = hours+':'+minutes+':'+seconds;\n      } else {\n        time = minutes+':'+seconds;\n      }\n\n      let distance = (this.ridingState.distance * 0.000621371);\n      if(distance > 100) {\n        distance = distance.toFixed();\n      } else {\n        distance = distance.toFixed(1);\n      }\n\n      let grade = this.ridingState.average_grade.toFixed(1);\n      if(grade === '-0' || grade === '-0.0') {\n        grade = '0.0';\n      }\n      let $grade = document.getElementById('grade-unit-icon');\n      if(grade >= 0) {\n        if($grade.classList.contains('fa-long-arrow-down')) {\n          $grade.classList.remove('fa-long-arrow-down');\n          $grade.classList.add('fa-long-arrow-up');\n        }\n      } else {\n        if($grade.classList.contains('fa-long-arrow-up')) {\n          $grade.classList.remove('fa-long-arrow-up');\n          $grade.classList.add('fa-long-arrow-down');\n        }\n      }\n\n      let watts = this.ridingState.watts;\n      if(watts !== undefined && watts !== null) {\n        watts = watts.toFixed();\n      } else {\n        watts = '--';\n      }\n\n      let bpm = this.ridingState.bpm;\n      if(bpm !== undefined && bpm !== null) {\n        bpm = bpm.toFixed();\n      } else {\n        bpm = '--';\n      }\n\n      let rpm = this.ridingState.rpm;\n      if(rpm !== undefined && rpm !== null) {\n        rpm = rpm.toFixed();\n      } else {\n        rpm = '--';\n      }\n\n      document.getElementById('watts').innerHTML = watts;\n      document.getElementById('heart').innerHTML = bpm;\n      document.getElementById('cadence').innerHTML = rpm;\n      document.getElementById('speed').innerHTML = (this.ridingState.speed * 2.23694).toFixed();\n      document.getElementById('distance').innerHTML = distance;\n      document.getElementById('climb').innerHTML = (this.ridingState.climb * 3.28084).toFixed();\n      document.getElementById('time').innerHTML = time;\n      document.getElementById('grade').innerHTML = grade;\n\n      // document.getElementById('watts').innerHTML = 2500;\n      // document.getElementById('heart').innerHTML = 260;\n      // document.getElementById('cadence').innerHTML = 230;\n      // document.getElementById('speed').innerHTML = 188;\n      // document.getElementById('distance').innerHTML = 55.3;\n      // document.getElementById('climb').innerHTML = 2300;\n      // document.getElementById('time').innerHTML = '0:00:00';\n\n      await timeout(1000);\n    }\n  }\n\n  async stravaExport() {\n    let $stva = document.getElementById('btn-export-strava');\n    if(!$stva.classList.contains('disabled')) {\n      $stva.classList.add('disabled');\n    } else {\n      return;\n    }\n\n    $stva.innerHTML = \"Exporting\";\n\n    let $name = document.getElementById('input-ride-name');\n    let name = $name.value;\n\n    let template = document.getElementById('strava-gpx-template').innerHTML;\n    let points = this.history.map(h => {\n      return {\n        lat: h.location.lat(),\n        lng: h.location.lng(),\n        elevation: h.elevation.toFixed(5),\n        time: dateFormat(h.time),\n        power: h.power,\n        hr: h.hr,\n        cad: h.cad\n      }\n    });\n\n    let gpxBody = Mustache.render(template, {\n      export_time: dateFormat(new Date()),\n      export_name: name,\n      points: points\n    });\n\n    let tokenForm = new FormData();\n    tokenForm.set('client_id', '19775');\n    tokenForm.set('client_secret', 'd1fd34e8c88fc5611ff41d9361e0668e9fe676f0');\n    tokenForm.set('code', localStorage.getItem('strava-oauth-code'));\n    let token_response = await fetch('https://www.strava.com/oauth/token', {\n      method: 'POST',\n      body: tokenForm\n    });\n    let token_body = await token_response.json();\n    let access_token = token_body.access_token;\n\n    let gpxFile = new File([gpxBody], \"import_to_strava.gpx\", {type : 'text/xml'});\n    let form = new FormData();\n    form.set('activity_type', 'virtualride');\n    form.set('name', name);\n    form.set('data_type', 'gpx');\n    form.set('file', gpxFile);\n    let headers = new Headers();\n    headers.set('Authorization', 'Bearer ' + access_token);\n    let response = await fetch('https://www.strava.com/api/v3/uploads', {\n      method: 'POST',\n      headers: headers,\n      body: form\n    });\n    let body = await response.json();\n    let req_id = body.id;\n\n    while(true) {\n      let status_response = await fetch('https://www.strava.com/api/v3/uploads/' + req_id, {\n        headers: headers\n      });\n      let status_body = await status_response.json();\n      if(status_body.activity_id) {\n        break;\n      }\n\n      await timeout(4000);\n    }\n    $stva.innerHTML = \"Done!\";\n\n  }\n\n  showFinalizeUI(msg) {\n    document.getElementById('ui-finalize-container').style.display = 'block';\n    document.getElementById('ui-finalize-label').innerHTML = msg;\n    if(localStorage.getItem('strava-oauth-code')) {\n      let now = new Date();\n      let ride_name = \"GPedal - \";\n      if(this.routeName) {\n        ride_name += this.routeName;\n      } else {\n        ride_name += (now.getMonth() + 1) + \"/\" + now.getDate()\n      }\n      let $name = document.getElementById('input-ride-name');\n      $name.value = ride_name;\n      $name.style.display = 'block';\n\n      let $stva = document.getElementById('btn-export-strava');\n      $stva.style.display = 'block';\n      $stva.onclick = e => {\n        e.preventDefault();\n\n        this.stravaExport()\n          .catch(error => {\n            console.log(\"Error: \", error);\n          });\n      };\n    }\n  }\n\n  static transitionUI() {\n    document.getElementById('configure-container').style.display = 'none';\n    document.getElementById('app-container').style.display = 'block';\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GPedalDisplay.js\n// module id = 4\n// module chunks = 0","/*\n * Air density calculator.\n *\n * Copyright 2012 by Steven Gribble (gribble [at] gmail (dot) com)\n * http://www.gribble.org/\n */\n\n// Calculate the air density, given:\n//  temp = temperature (celsius)\n//  press = actual air pressure (millibars, i.e., hectopascals)\n//  dew = dew point (celsius)\nexport function CalculateRho(temp, press, dew) {\n    // Step 1: calculate the saturation water pressure at the dew point,\n    // i.e., the vapor pressure in the air.  Use Herman Wobus' equation.\n    var c0 = 0.99999683;\n    var c1 = -0.90826951E-02;\n    var c2 = 0.78736169E-04;\n    var c3 = -0.61117958E-06;\n    var c4 = 0.43884187E-08;\n    var c5 = -0.29883885E-10;\n    var c6 = 0.21874425E-12;\n    var c7 = -0.17892321E-14;\n    var c8 = 0.11112018E-16;\n    var c9 = -0.30994571E-19;\n    var p = c0 + dew*(c1 + dew*(c2 + dew*(c3 + dew*(c4 + dew*(c5 + dew*(c6 + dew*(c7 + dew*(c8 + dew*(c9)))))))));\n    var psat_mbar = 6.1078 / (Math.pow(p, 8));\n\n    // Step 2: calculate the vapor pressure.\n    var pv_pascals = psat_mbar * 100.0;\n\n    // Step 3: calculate the pressure of dry air, given the vapor\n    // pressure and actual pressure.\n    var pd_pascals = (press*100) - pv_pascals;\n\n    // Step 4: calculate the air density, using the equation for\n    // the density of a mixture of dry air and water vapor.\n    var density =\n        (pd_pascals / (287.0531 * (temp + 273.15))) +\n        (pv_pascals / (461.4964 * (temp + 273.15)));\n\n    return density;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/air_density.js\n// module id = 5\n// module chunks = 0","/*\n * Cycling power vs. velocity, based on a physical model.\n *\n * Copyright 2012 by Steven Gribble (gribble [at] gmail (dot) com)\n * http://www.gribble.org/\n */\n\n// Calculates and returns the force components needed to achieve the\n// given velocity.  <params> is a dictionary containing the rider and\n// environmental parameters all in metric units.  'velocity' is in km/h.\nfunction CalculateForces(velocity, params) {\n    // calculate Fgravity\n    var Fgravity = 9.8067 *\n        (params.rp_wr + params.rp_wb) *\n        Math.sin(Math.atan(params.ep_g / 100.0));\n\n    // calculate Frolling\n    var Frolling = 9.8067 *\n        (params.rp_wr + params.rp_wb) *\n        Math.cos(Math.atan(params.ep_g / 100.0)) *\n        (params.ep_crr);\n\n    // calculate Fdrag\n    var Fdrag = 0.5 *\n        (params.rp_a) *\n        (params.rp_cd) *\n        (params.ep_rho) *\n        (velocity * 1000.0 / 3600.0) *\n        (velocity * 1000.0 / 3600.0);\n\n    // cons up and return the force components\n    var ret = { };\n    ret.Fgravity = Fgravity;\n    ret.Frolling = Frolling;\n    ret.Fdrag = Fdrag;\n    return ret;\n}\n\n// Calculates and returns the power needed to achieve the given\n// velocity.  <params> is a dictionary containing the rider and\n// environmenetal parameters all in metric units.  'velocity'\n// is in km/h.  Returns power in watts.\nfunction CalculatePower(velocity, params) {\n    // calculate the forces on the rider.\n    var forces = CalculateForces(velocity, params);\n    var totalforce = forces.Fgravity + forces.Frolling + forces.Fdrag;\n\n    // calculate necessary wheelpower\n    var wheelpower = totalforce * (velocity * 1000.0 / 3600.0);\n\n    // calculate necessary legpower\n    var legpower = wheelpower / (1.0 - (params.rp_dtl/100.0));\n\n    return legpower;\n}\n\n// Calculates the velocity obtained from a given power.  <params> is a\n// dictionary containing the rider and model parameters, all in\n// metric units.\n//\n// Runs a simple midpoint search, using CalculatePower().\n//\n// Returns velocity, in km/h.\nexport function CalculateVelocity(power, params) {\n    // How close to get before finishing.\n    var epsilon = 0.000001;\n\n    // Set some reasonable upper / lower starting points.\n    var lowervel = -1000.0;\n    var uppervel = 1000.0;\n    var midvel = 0.0;\n\n    var midpow = CalculatePower(midvel, params);\n\n    // Iterate until completion.\n    var itcount = 0;\n    do {\n        if (Math.abs(midpow - power) < epsilon)\n            break;\n\n        if (midpow > power)\n            uppervel = midvel;\n        else\n            lowervel = midvel;\n\n        midvel = (uppervel + lowervel) / 2.0;\n        midpow = CalculatePower(midvel, params);\n    } while (itcount++ < 100);\n\n    return midvel;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/power_v_speed.js\n// module id = 6\n// module chunks = 0","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mustache/mustache.js\n// module id = 7\n// module chunks = 0","import {ssci} from './lib/smoothKernel';\nimport {timeout} from './lib/utils';\nimport {getElevationAlongPath} from './gmapPromises';\nimport md5 from 'blueimp-md5';\n\nexport class RoutePoint {\n  constructor({elevation, grade, smoothedGrade, distance, heading, climb, opposite, location}) {\n    this.elevation = elevation;\n    this.grade = grade;\n    this.smoothedGrade = smoothedGrade;\n    this.distance = distance;\n    this.heading = heading;\n    this.climb = climb;\n    this.opposite = opposite;\n\n    if(location instanceof google.maps.LatLng) {\n      this.location = location;\n    } else {\n      this.location = new google.maps.LatLng(location.lat, location.lng);\n    }\n  }\n\n  toJSON() {\n    let {elevation, grade, smoothedGrade, distance, heading, climb, opposite} = this;\n    let location = this.location.toJSON();\n    return {elevation, grade, smoothedGrade, distance, heading, climb, opposite, location};\n  }\n\n  static fromJSON(obj) {\n    return new RoutePoint(obj);\n  }\n}\n\nexport class GPXRoutePointFactory {\n  constructor (fileBody) {\n    this.fileBody = fileBody;\n    this.md5 = md5(fileBody);\n    this.points = [];\n  }\n\n  expandPointsWithGradeAndHeading() {\n    for(let x=0; x<this.points.length; x++) {\n      let p1 = this.points[x];\n      if(x < (this.points.length - 1)) {\n        let p2 = this.points[x+1];\n        p1.heading = google.maps.geometry.spherical.computeHeading(p1.location, p2.location);\n        let adjacent = google.maps.geometry.spherical.computeDistanceBetween(p1.location, p2.location);\n        let opposite = p2.elevation - p1.elevation;\n        p1.distance = adjacent;\n        p1.grade = 100 * (opposite / adjacent);\n        p1.opposite = opposite;\n        p1.climb = opposite;\n      } else {\n        p1.distance = 0;\n        p1.heading = 0;\n        p1.grade = 0;\n        p1.opposite = 0;\n        p1.climb = 0;\n      }\n    }\n    let grades = this.points.map((p,i) => {return [i,p.grade]});\n\n    let smoothed_grades_obj = ssci.smooth.kernel2()\n    \t\t                      .kernel(\"Gaussian\")\n    \t\t                      .data(grades)\n    \t\t                      .scale(2);\n    smoothed_grades_obj();\n    let smoothed_grades = smoothed_grades_obj.output();\n    for(let x=0; x<this.points.length; x++) {\n      this.points[x].smoothedGrade = smoothed_grades[x][1];\n      if(this.points[x].smoothedGrade < 0.95 || this.points[x].climb < 0) {\n        this.points[x].climb = 0;\n      }\n    }\n  }\n\n  async expandPointsWithElevation(gpxPoints) {\n    let start=0;\n    let desiredDistanceBetween = 20;\n    let maxPoints = 512;\n    let maxDistance = maxPoints * desiredDistanceBetween;\n\n    while(start < gpxPoints.length) {\n      if(start > 0) {\n        await timeout(4000);\n      }\n\n      let points_slice = [];\n      let distance_slice = 0;\n      let count_slice = 0;\n      for(let x=start; x<gpxPoints.length; x++) {\n        let p1 = gpxPoints[x];\n        let distance = 0;\n        if(x < (gpxPoints.length - 1)) {\n          let p2 = gpxPoints[x+1];\n          distance = google.maps.geometry.spherical.computeDistanceBetween(p1.location, p2.location);\n        }\n        distance_slice += distance;\n        count_slice += 1;\n        if(distance_slice <= maxDistance && count_slice < maxPoints) {\n          points_slice.push(p1.location);\n        } else {\n          count_slice -= 1;\n          distance_slice -= distance;\n          break;\n        }\n      }\n\n      let elevationRequest = {\n        'path': points_slice,\n        'samples': Math.ceil(distance_slice / desiredDistanceBetween),\n      }\n\n      let elevations = await getElevationAlongPath(elevationRequest);\n      let elevationPoints = elevations.map(e => {\n        return new RoutePoint({elevation: e.elevation, location: e.location});\n      });\n      Array.prototype.push.apply(this.points, elevationPoints);\n      start = count_slice + start;\n    }\n  }\n\n  async create() {\n    if(localStorage.getItem(this.md5)) {\n      let raw = JSON.parse(localStorage.getItem(this.md5));\n      this.points = raw.map(r => {return RoutePoint.fromJSON(r)});\n    } else {\n      let gpxParser = new DOMParser();\n      let gpxDom = gpxParser.parseFromString(this.fileBody, \"text/xml\");\n      let gpxPoints = Array.from(gpxDom.documentElement.getElementsByTagName('trkpt')).map(p => {\n        let lat = parseFloat(p.getAttribute('lat')),\n            lng = parseFloat(p.getAttribute('lon'));\n\n        return new RoutePoint({location: {lat, lng}});\n      });\n\n      await this.expandPointsWithElevation(gpxPoints);\n      this.expandPointsWithGradeAndHeading();\n\n      localStorage.setItem(this.md5, JSON.stringify(this.points));\n    }\n\n    return this.points;\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Route.js\n// module id = 8\n// module chunks = 0","/**\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// From https://bl.ocks.org/muonsw/3eb574d4b247fb4a484b\n// Simon West - https://github.com/muonsw\n\n/**\n * Gaussian kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_G(x1 , x2 , b ) {\n    return (1/Math.sqrt(2*Math.PI))*Math.exp(-(Math.pow((x1 - x2),2) / (2*Math.pow(b,2))));\n}\n\n/**\n * Epanechnikov kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_E(x1 , x2 , b ) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return (3 / 4) * (1 - Math.pow(((x1 - x2) / b), 2));\n    }\n}\n\n/**\n * Logistic kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_L(x1 , x2 , b ) {\n    return 1 / (Math.exp((x1 - x2) / b) + Math.exp(-(x1 - x2) / b));\n}\n\n/**\n * Uniform kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_U(x1 , x2 , b ) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return 1 / 2;\n    }\n}\n\n/**\n * Triangular kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_T(x1 , x2 , b ) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return (1 - Math.abs((x1 - x2) / b));\n    }\n}\n\n/**\n * Quartic kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_Q(x1 , x2 , b ) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return (15 / 16) * Math.pow((1 - Math.pow(((x1 - x2) / b), 2)), 2);\n    }\n}\n\n/**\n * Triweight kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_TW(x1 , x2 , b ) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return (35 / 32) * Math.pow((1 - Math.pow(((x1 - x2) / b), 2)), 3);\n    }\n}\n\n/**\n * Cosine kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_Co(x1 , x2 , b) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return (Math.PI / 4) * Math.cos((Math.PI / 2) * ((x1 - x2) / b));\n    }\n}\n\n/**\n * Tricube kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_TC(x1 , x2 , b) {\n    if (Math.abs((x1 - x2) / b) > 1) {\n        return 0;\n    } else {\n        return (70 / 81) * Math.pow((1 - Math.pow(Math.abs((x1 - x2) / b), 3)), 3);\n    }\n}\n\n/**\n * Silverman kernel - applied within the smoothKernel function\n * @param {number} x1 - point being adjusted\n * @param {number} x2 - point used to make adjustment\n * @param {number} b - scaling parameter\n * @returns {number} result of expression\n */\nfunction k_S(x1, x2, b){\n    var u = Math.abs((x2-x1)/b);\n\n    return 0.5 * Math.exp(-u/Math.SQRT2) * Math.sin(u/Math.SQRT2 + Math.PI/4);\n}\n\n\n/**\n * Take an array of points and returns a set of smoothed points by applying a filter (specified by the kernel function) to the data\n * This function cuts off the kernel calculations after the kernel decreases beyond a certain level\n * @returns {array} - an array with the new points\n */\n\nexport const ssci = {};\nssci.smooth = {};\n\nssci.smooth.kernel2 = function(){\n\n    var output=[];\n    var kernels = {\n        'Uniform': k_U,\n        'Triangle': k_T,\n        'Epanechnikov': k_E,\n        'Quartic': k_Q,\n        'Triweight': k_TW,\n        'Logistic': k_L,\n        'Cosine': k_Co,\n        'Gaussian': k_G,\n        'Tricube': k_TC,\n        'Silverman': k_S\n    };\n    var max_diff = 0.001;   //Maximum difference to calculate kernel - equivalent to 0.1%\n    var scale = [];\n    var data = [];\n    var kernel = \"Gaussian\";\n    var i, j;               //Iterators\n    var x_conv = function(d){ return d[0]; };\n    var y_conv = function(d){ return d[1]; };\n\n    function sk() {\n        var dataArray = [];\n\n        //Create array of data using accessors\n        dataArray = data.map( function(d){\n            return [x_conv(d), y_conv(d)];\n        });\n\n        //Deal with scale\n        var scales = [];\n\n        if(typeof scale === 'number'){\n            //Create an array of length dataArray and populate with scale parameter\n            for(i=0;i<dataArray.length;i++){\n                scales.push(scale);\n            }\n        } else if (typeof scale === 'object' && Array.isArray(scale)){\n            //Does the length of the scale array match the number of points fed to the function\n            if(scale.length === dataArray.length){\n                scales = scale.slice();\n            } else {\n                //Put in for completeness but will almost never be what is intended\n                var counter=0;\n                for(i=0;i<dataArray.length;i++){\n                    scales.push(scale[counter]);\n                    if(i<scale.length){\n                        counter++;\n                    } else {\n                        counter=0;\n                    }\n                }\n            }\n        } else {\n            //What else can it be?\n            console.log(scale);\n            throw new Error('Invalid scale parameter');\n        }\n\n        //Calculate smoothed values\n        for(i=0;i<dataArray.length;i++){\n            var tot_ker1 = 0;\n            var tot_ker2 = 0;\n            var temp_ker = 0;\n\n            //Kernel for point=i\n            var self_ker = kernels[kernel](dataArray[i][0], dataArray[i][0], scales[i]);\n            tot_ker1 = tot_ker1 + self_ker * dataArray[i][1];\n            tot_ker2 = tot_ker2 + self_ker;\n\n            //Kernel for lower points\n            for(j=i-1; j>-1; j--){\n                temp_ker = kernels[kernel](dataArray[i][0], dataArray[j][0], scales[i]);\n                if(temp_ker/self_ker<max_diff){\n                    break;\n                }\n                tot_ker1 = tot_ker1 + temp_ker * dataArray[j][1];\n                tot_ker2 = tot_ker2 + temp_ker;\n            }\n\n            //Kernel for higher points\n            for(j=i+1; j<dataArray.length; j++){\n                temp_ker = kernels[kernel](dataArray[i][0], dataArray[j][0], scales[i]);\n                if(temp_ker/self_ker<max_diff){\n                    break;\n                }\n                tot_ker1 = tot_ker1 + temp_ker * dataArray[j][1];\n                tot_ker2 = tot_ker2 + temp_ker;\n            }\n\n            output.push([dataArray[i][0],(tot_ker1 / tot_ker2)]);\n        }\n    }\n\n    sk.scale = function(value){\n        if(!arguments.length){ return scale; }\n        scale = value;\n\n        return sk;\n    };\n\n    sk.kernel = function(value){\n        if(!arguments.length){ return kernel; }\n        //Check that the kernel is valid\n        if(typeof kernels[value] !== 'function'){\n            throw new Error('Invalid kernel');\n        }\n\n        kernel = value;\n\n        return sk;\n    };\n\n    sk.x = function(value){\n        if(!arguments.length){ return x_conv; }\n        x_conv = value;\n        return sk;\n    };\n\n    sk.y = function(value){\n        if(!arguments.length){ return y_conv; }\n        y_conv = value;\n        return sk;\n    };\n\n    sk.output = function(){\n        return output;\n    };\n\n    sk.diff = function(value){\n        if(!arguments.length){ return max_diff; }\n        max_diff = value;\n\n        return sk;\n    };\n\n    sk.data = function(value){\n\t\tdata = value;\n\n\t\treturn sk;\n\t};\n\n    return sk;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/smoothKernel.js\n// module id = 9\n// module chunks = 0","/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n;(function ($) {\n  'use strict'\n\n  /*\n  * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n  * to work around bugs in some JS interpreters.\n  */\n  function safeAdd (x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xFFFF)\n  }\n\n  /*\n  * Bitwise rotate a 32-bit number to the left.\n  */\n  function bitRotateLeft (num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  }\n\n  /*\n  * These functions implement the four basic operations the algorithm uses.\n  */\n  function md5cmn (q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n  }\n  function md5ff (a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | ((~b) & d), a, b, x, s, t)\n  }\n  function md5gg (a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & (~d)), a, b, x, s, t)\n  }\n  function md5hh (a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n  }\n  function md5ii (a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | (~d)), a, b, x, s, t)\n  }\n\n  /*\n  * Calculate the MD5 of an array of little-endian words, and a bit length.\n  */\n  function binlMD5 (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << (len % 32)\n    x[(((len + 64) >>> 9) << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = safeAdd(a, olda)\n      b = safeAdd(b, oldb)\n      c = safeAdd(c, oldc)\n      d = safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  }\n\n  /*\n  * Convert an array of little-endian words to a string\n  */\n  function binl2rstr (input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF)\n    }\n    return output\n  }\n\n  /*\n  * Convert a raw string to an array of little-endian words\n  * Characters >255 have their high-byte silently ignored.\n  */\n  function rstr2binl (input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32)\n    }\n    return output\n  }\n\n  /*\n  * Calculate the MD5 of a raw string\n  */\n  function rstrMD5 (s) {\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n  }\n\n  /*\n  * Calculate the HMAC-MD5, of a key and some data (raw strings)\n  */\n  function rstrHMACMD5 (key, data) {\n    var i\n    var bkey = rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5C5C5C5C\n    }\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n  }\n\n  /*\n  * Convert a raw string to a hex string\n  */\n  function rstr2hex (input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0F) +\n      hexTab.charAt(x & 0x0F)\n    }\n    return output\n  }\n\n  /*\n  * Encode a string as utf-8\n  */\n  function str2rstrUTF8 (input) {\n    return unescape(encodeURIComponent(input))\n  }\n\n  /*\n  * Take string arguments and return either raw or hex encoded strings\n  */\n  function rawMD5 (s) {\n    return rstrMD5(str2rstrUTF8(s))\n  }\n  function hexMD5 (s) {\n    return rstr2hex(rawMD5(s))\n  }\n  function rawHMACMD5 (k, d) {\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n  }\n  function hexHMACMD5 (k, d) {\n    return rstr2hex(rawHMACMD5(k, d))\n  }\n\n  function md5 (string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return hexMD5(string)\n      }\n      return rawMD5(string)\n    }\n    if (!raw) {\n      return hexHMACMD5(key, string)\n    }\n    return rawHMACMD5(key, string)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return md5\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = md5\n  } else {\n    $.md5 = md5\n  }\n}(this))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/blueimp-md5/js/md5.js\n// module id = 10\n// module chunks = 0","let ble_sint16 = ['getInt16', 2, true];\nlet ble_uint8 = ['getUint8', 1];\nlet ble_uint16 = ['getUint16', 2, true];\nlet ble_uint32 = ['getUint32', 4, true];\n// TODO: paired 12bit uint handling\nlet ble_uint24 = ['getUint8', 3];\n\n// https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.characteristic.cycling_power_measurement.xml\nlet cycling_power_measurement = [\n  [0, [ [ble_sint16, 'instantaneous_power'] ]],\n  [1, [ [ble_uint8, 'pedal_power_balance'] ]],\n  [2, [ /* Pedal Power Balance Reference */]],\n  [4, [ [ble_uint16, 'accumulated_torque'] ]],\n  [8, [ /* Accumulated Torque Source */]],\n  [16, [ [ble_uint32, 'cumulative_wheel_revolutions'], [ble_uint16, 'last_wheel_event_time'] ]],\n  [32, [ [ble_uint16, 'cumulative_crank_revolutions'], [ble_uint16, 'last_crank_event_time'] ]],\n  [64, [ [ble_sint16, 'maximum_force_magnitude'], [ble_sint16, 'minimum_force_magnitude'] ]],\n  [128, [ [ble_sint16, 'maximum_torque_magnitude'], [ble_sint16, 'minimum_torque_magnitude'] ]],\n  [256, [ [ble_uint24, 'maximum_minimum_angle'] ]],\n  [512, [ [ble_uint16, 'top_dead_spot_angle'] ]],\n  [1024, [ [ble_uint16, 'bottom_dead_spot_angle'] ]],\n  [2048, [ [ble_uint16, 'accumulated_energy'] ]],\n  [4096, [ /* Offset Compensation Indicator */]]\n];\n\n// https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.characteristic.csc_measurement.xml\nlet csc_measurement = [\n  [1, [ [ble_uint32, 'cumulative_wheel_revolutions'], [ble_uint16, 'last_wheel_event_time'] ]],\n  [2, [ [ble_uint16, 'cumulative_crank_revolutions'], [ble_uint16, 'last_crank_event_time'] ]]\n];\n\nclass BleCharacteristicParser {\n  getData(dataview) {\n    let offset = 0;\n    let mask;\n    if(this.mask_size === 16) {\n      mask = dataview.getUint16(0, true);\n      offset += 2;\n    } else {\n      mask = dataview.getUint8(0);\n      offset += 1;\n    }\n\n    let fieldArrangement = [];\n\n    // Contains required fields\n    if(this.fields[0][0] === 0) {\n      for(let fdesc of this.fields[0][1]) {\n        fieldArrangement.push(fdesc);\n      }\n    }\n\n    for(let [flag, fieldDescriptions] of this.fields) {\n      if(mask & flag) {\n        for(let fdesc of fieldDescriptions) {\n          fieldArrangement.push(fdesc);\n        }\n      }\n    }\n\n    let data = {};\n    for(let field of fieldArrangement) {\n      var [[accessor, fieldSize, endianness], fieldName] = field;\n      let value;\n      if(endianness) {\n        value = dataview[accessor](offset, endianness);\n      } else {\n        value = dataview[accessor](offset);\n      }\n\n      data[fieldName] = value;\n      offset += fieldSize;\n    }\n\n    return data;\n  }\n}\n\nclass CyclingSpeedCadenceMeasurementParser extends BleCharacteristicParser {\n  constructor () {\n    super();\n    this.fields = csc_measurement;\n    this.mask_size = 8;\n  }\n}\n\nexport class CyclingPowerMeasurementParser extends BleCharacteristicParser {\n  constructor () {\n    super();\n    this.fields = cycling_power_measurement;\n    this.mask_size = 16;\n  }\n}\n\nexport class BleMeter {\n  constructor (device, server, service, characteristic) {\n    this.device = device;\n    this.server = server;\n    this.service = service;\n    this.characteristic = characteristic;\n\n    this.name = this.device.name;\n    this.id = this.device.id;\n\n    this.listening = false;\n    this.listeners = {};\n\n    this.device.addEventListener('gattserverdisconnected', e => {\n      this.gattserverdisconnected(e)\n        .catch(error => {\n          console.log(\"Error: \", error);\n        });\n    });\n  }\n\n  async gattserverdisconnected(e) {\n    console.log('Reconnecting');\n    this.server = await this.device.gatt.connect();\n    this.service = await this.server.getPrimaryService(this.serviceId);\n    this.characteristic = await this.service.getCharacteristic(this.characteristicId);\n    if(this.listening) {\n      this.listening = false;\n      this.listen();\n    }\n  }\n\n  addListener(type, callback) {\n    if(!(type in this.listeners)) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(callback);\n  }\n\n  dispatch(type, value) {\n    if(!(type in this.listeners)) {\n      this.listeners[type] = [];\n    }\n\n    for(let l of this.listeners[type]) {\n      l(value);\n    }\n  }\n}\n\nexport class BlePowerCadenceMeter extends BleMeter {\n  constructor (device, server, service, characteristic) {\n    super(device, server, service, characteristic);\n\n    this.serviceId = 0x1818;\n    this.characteristicId = 0x2A63;\n    this.parser = new CyclingPowerMeasurementParser();\n\n    this.lastCrankRevolutions = 0;\n    this.lastCrankTime = 0;\n  }\n\n  listen() {\n    if(!this.listening) {\n      this.characteristic.addEventListener('characteristicvaluechanged', event => {\n        let data = this.parser.getData(event.target.value);\n        let power = data['instantaneous_power'];\n        let crankRevolutions = data['cumulative_crank_revolutions'];\n        let crankTime = data['last_crank_event_time'];\n\n        if(this.lastCrankTime > crankTime) {\n          this.lastCrankTime = this.lastCrankTime - 65536;\n        }\n        if(this.lastCrankRevolutions > crankRevolutions) {\n          this.lastCrankRevolutions = this.lastCrankRevolutions - 65536;\n        }\n\n        let revs = crankRevolutions - this.lastCrankRevolutions;\n        let duration = (crankTime - this.lastCrankTime) / 1024;\n        let rpm = 0;\n        if(duration > 0) {\n          rpm = (revs / duration) * 60;\n        }\n\n        this.lastCrankRevolutions = crankRevolutions;\n        this.lastCrankTime = crankTime;\n\n        this.dispatch('power', power);\n        this.dispatch('cadence', rpm);\n      });\n      this.characteristic.startNotifications();\n      this.listening = true;\n    }\n  }\n\n}\n\nexport class BlePowerMeter extends BleMeter {\n  constructor (device, server, service, characteristic) {\n    super(device, server, service, characteristic);\n\n    this.serviceId = 0x1818;\n    this.characteristicId = 0x2A63;\n    this.parser = new CyclingPowerMeasurementParser();\n  }\n\n  listen() {\n    if(!this.listening) {\n      this.characteristic.addEventListener('characteristicvaluechanged', event => {\n        let data = this.parser.getData(event.target.value);\n        let power = data['instantaneous_power'];\n        this.dispatch('power', power);\n      });\n      this.characteristic.startNotifications();\n      this.listening = true;\n    }\n  }\n\n}\n\nexport class BleCadenceMeter extends BleMeter  {\n  constructor (device, server, service, characteristic) {\n    super(device, server, service, characteristic);\n\n    this.serviceId = 0x1816;\n    this.characteristicId = 0x2A5B;\n    this.parser = new CyclingSpeedCadenceMeasurementParser();\n\n    this.lastCrankRevolutions = 0;\n    this.lastCrankTime = 0;\n  }\n\n  listen() {\n    if(!this.listening) {\n      this.characteristic.addEventListener('characteristicvaluechanged', event => {\n        let data = this.parser.getData(event.target.value);\n        let crankRevolutions = data['cumulative_crank_revolutions'];\n        let crankTime = data['last_crank_event_time'];\n\n        if(crankRevolutions !== undefined && crankTime !== undefined) {\n          if(this.lastCrankTime > crankTime) {\n            this.lastCrankTime = this.lastCrankTime - 65536;\n          }\n          if(this.lastCrankRevolutions > crankRevolutions) {\n            this.lastCrankRevolutions = this.lastCrankRevolutions - 65536;\n          }\n\n          let revs = crankRevolutions - this.lastCrankRevolutions;\n          let duration = (crankTime - this.lastCrankTime) / 1024;\n          let rpm = 0;\n          if(duration > 0) {\n            rpm = (revs / duration) * 60;\n          }\n\n          this.lastCrankRevolutions = crankRevolutions;\n          this.lastCrankTime = crankTime;\n\n          this.dispatch('cadence', rpm);\n        }\n      });\n      this.characteristic.startNotifications();\n      this.listening = true;\n    }\n  }\n\n}\n\nexport class BleHRMeter extends BleMeter {\n  constructor (device, server, service, characteristic) {\n    super(device, server, service, characteristic);\n\n    this.serviceId = 0x180D;\n    this.characteristicId = 0x2A37;\n  }\n\n  listen() {\n    if(!this.listening) {\n      this.characteristic.addEventListener('characteristicvaluechanged', event => {\n        let hr = event.target.value.getUint8(1);\n        this.dispatch('hr', hr);\n      });\n      this.characteristic.startNotifications();\n      this.listening = true;\n    }\n  }\n\n}\n\nexport class VirtualPowerMeter {\n  constructor () {\n    this.listeners = {};\n    this.listening = false;\n    this.watts = 0;\n\n    this.id = 'virtual';\n    this.name = 'Virtual Power Meter';\n  }\n\n  listen() {\n    if(!this.listening) {\n      document.getElementById('ui-vpower-container').style.display = 'block';\n      let $vpower = document.getElementById('vpower');\n      $vpower.value = this.watts;\n      $vpower.onchange = e => {\n        this.watts = parseInt($vpower.value);\n      };\n\n      setInterval(() => {\n        this.dispatch('power', this.watts);\n      }, 750);\n\n      this.listening = true;\n    }\n  }\n\n  addListener(type, callback) {\n    if(!(type in this.listeners)) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(callback);\n  }\n\n  dispatch(type, value) {\n    if(!(type in this.listeners)) {\n      this.listeners[type] = [];\n    }\n\n    for(let l of this.listeners[type]) {\n      l(value);\n    }\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Meter.js\n// module id = 11\n// module chunks = 0","/*!\nCopyright (C) 2015-2017 Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n'use strict';\n\nfunction URLSearchParams(query) {\n  var\n    index, key, value,\n    pairs, i, length,\n    dict = Object.create(null)\n  ;\n  this[secret] = dict;\n  if (!query) return;\n  if (typeof query === 'string') {\n    if (query.charAt(0) === '?') {\n      query = query.slice(1);\n    }\n    for (\n      pairs = query.split('&'),\n      i = 0,\n      length = pairs.length; i < length; i++\n    ) {\n      value = pairs[i];\n      index = value.indexOf('=');\n      if (-1 < index) {\n        appendTo(\n          dict,\n          decode(value.slice(0, index)),\n          decode(value.slice(index + 1))\n        );\n      } else if (value.length){\n        appendTo(\n          dict,\n          decode(value),\n          ''\n        );\n      }\n    }\n  } else {\n    if (isArray(query)) {\n      for (\n        i = 0,\n        length = query.length; i < length; i++\n      ) {\n        value = query[i];\n        appendTo(dict, value[0], value[1]);\n      }\n    } else {\n      for (key in query) {\n         appendTo(dict, key, query[key]);\n      }\n    }\n  }\n}\n\nvar\n  isArray = Array.isArray,\n  URLSearchParamsProto = URLSearchParams.prototype,\n  find = /[!'\\(\\)~]|%20|%00/g,\n  plus = /\\+/g,\n  replace = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  },\n  replacer = function (match) {\n    return replace[match];\n  },\n  secret = '__URLSearchParams__:' + Math.random()\n;\n\nfunction appendTo(dict, name, value) {\n  if (name in dict) {\n    dict[name].push('' + value);\n  } else {\n    dict[name] = isArray(value) ? value : ['' + value];\n  }\n}\n\nfunction decode(str) {\n  return decodeURIComponent(str.replace(plus, ' '));\n}\n\nfunction encode(str) {\n  return encodeURIComponent(str).replace(find, replacer);\n}\n\nURLSearchParamsProto.append = function append(name, value) {\n  appendTo(this[secret], name, value);\n};\n\nURLSearchParamsProto.delete = function del(name) {\n  delete this[secret][name];\n};\n\nURLSearchParamsProto.get = function get(name) {\n  var dict = this[secret];\n  return name in dict ? dict[name][0] : null;\n};\n\nURLSearchParamsProto.getAll = function getAll(name) {\n  var dict = this[secret];\n  return name in dict ? dict[name].slice(0) : [];\n};\n\nURLSearchParamsProto.has = function has(name) {\n  return name in this[secret];\n};\n\nURLSearchParamsProto.set = function set(name, value) {\n  this[secret][name] = ['' + value];\n};\n\nURLSearchParamsProto.forEach = function forEach(callback, thisArg) {\n  var dict = this[secret];\n  Object.getOwnPropertyNames(dict).forEach(function(name) {\n    dict[name].forEach(function(value) {\n      callback.call(thisArg, value, name, this);\n    }, this);\n  }, this);\n};\n\n/*\nURLSearchParamsProto.toBody = function() {\n  return new Blob(\n    [this.toString()],\n    {type: 'application/x-www-form-urlencoded'}\n  );\n};\n*/\n\nURLSearchParamsProto.toJSON = function toJSON() {\n  return {};\n};\n\nURLSearchParamsProto.toString = function toString() {\n  var dict = this[secret], query = [], i, key, name, value;\n  for (key in dict) {\n    name = encode(key);\n    for (\n      i = 0,\n      value = dict[key];\n      i < value.length; i++\n    ) {\n      query.push(name + '=' + encode(value[i]));\n    }\n  }\n  return query.join('&');\n};\n\nURLSearchParams = (module.exports = global.URLSearchParams || URLSearchParams);\n\n(function (URLSearchParamsProto) {\n\n  var iterable = (function () {\n    try {\n      return !!Symbol.iterator;\n    } catch(error) {\n      return false;\n    }\n  }());\n\n  // mostly related to issue #24\n  if (!('forEach' in URLSearchParamsProto)) {\n    URLSearchParamsProto.forEach = function forEach(callback, thisArg) {\n      var names = Object.create(null);\n      this.toString()\n          .replace(/=[\\s\\S]*?(?:&|$)/g, '=')\n          .split('=')\n          .forEach(function (name) {\n            if (!name.length || name in names) return;\n            (names[name] = this.getAll(name)).forEach(function(value) {\n              callback.call(thisArg, value, name, this);\n            }, this);\n          }, this);\n    };\n  }\n\n  if (!('keys' in URLSearchParamsProto)) {\n    URLSearchParamsProto.keys = function keys() {\n      var items = [];\n      this.forEach(function(value, name) { items.push(name); });\n      var iterator = {\n        next: function() {\n          var value = items.shift();\n          return {done: value === undefined, value: value};\n        }\n      };\n\n      if (iterable) {\n        iterator[Symbol.iterator] = function() {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    };\n  }\n\n  if (!('values' in URLSearchParamsProto)) {\n    URLSearchParamsProto.values = function values() {\n      var items = [];\n      this.forEach(function(value) { items.push(value); });\n      var iterator = {\n        next: function() {\n          var value = items.shift();\n          return {done: value === undefined, value: value};\n        }\n      };\n\n      if (iterable) {\n        iterator[Symbol.iterator] = function() {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    };\n  }\n\n  if (!('entries' in URLSearchParamsProto)) {\n    URLSearchParamsProto.entries = function entries() {\n      var items = [];\n      this.forEach(function(value, name) { items.push([name, value]); });\n      var iterator = {\n        next: function() {\n          var value = items.shift();\n          return {done: value === undefined, value: value};\n        }\n      };\n\n      if (iterable) {\n        iterator[Symbol.iterator] = function() {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    };\n  }\n\n  if (iterable && !(Symbol.iterator in URLSearchParamsProto)) {\n    URLSearchParamsProto[Symbol.iterator] = URLSearchParamsProto.entries;\n  }\n\n  if (!('sort' in URLSearchParamsProto)) {\n    URLSearchParamsProto.sort = function sort() {\n      var\n        entries = this.entries(),\n        entry = entries.next(),\n        done = entry.done,\n        keys = [],\n        values = Object.create(null),\n        i, key, value\n      ;\n      while (!done) {\n        value = entry.value;\n        key = value[0];\n        keys.push(key);\n        if (!(key in values)) {\n          values[key] = [];\n        }\n        values[key].push(value[1]);\n        entry = entries.next();\n        done = entry.done;\n      }\n      // not the champion in efficiency\n      // but these two bits just do the job\n      keys.sort();\n      for (i = 0; i < keys.length; i++) {\n        this.delete(keys[i]);\n      }\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        this.append(key, values[key].shift());\n      }\n    };\n  }\n\n}(URLSearchParams.prototype));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-search-params/build/url-search-params.node.js\n// module id = 12\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}